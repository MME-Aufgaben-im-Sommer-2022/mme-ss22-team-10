var h=Object.defineProperty;var n=(c,i,t)=>i in c?h(c,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[i]=t;var e=(c,i,t)=>(n(c,typeof i!="symbol"?i+"":i,t),t);import{W as a}from"./index.32cff5c6.js";import o from"./LiveTextInput.d349d20f.js";import"./EventBus.828a7267.js";import"./CloseAllEditorInputs.40019b73.js";const d=`<div class="check-list-item-container">
  <input type="checkbox" class="checkbox">
  <!--LiveTextInput will be appended here-->
</div>`,l=`.check-list-item-container{width:100%;display:flex;flex-direction:row;align-items:center}.checked{text-decoration:line-through}.checkbox{cursor:pointer}
`;class g extends a{constructor(t,s){super(d,l);e(this,"$checkListItemContainer");e(this,"$checkbox");e(this,"$liveTextInput");e(this,"textValueState");e(this,"isCheckedState");e(this,"initListeners",()=>{this.$checkbox.addEventListener("change",this.$onCheckboxChanged),this.isCheckedState.addEventListener("change",this.onCheckedStateChanged)});e(this,"$onCheckboxChanged",t=>{this.isCheckedState.value=t.target.checked});e(this,"onCheckedStateChanged",()=>{this.isCheckedState.value?this.onToggleChecked():this.onToggleUnchecked()});e(this,"onToggleChecked",()=>{this.$checkListItemContainer.classList.add("checked")});e(this,"onToggleUnchecked",()=>{this.$checkListItemContainer.classList.remove("checked")});this.textValueState=t,this.isCheckedState=s}get htmlTagName(){return"check-list-item"}onCreate(){this.$initHtml(),this.initListeners()}$initHtml(){this.classList.add("list-item"),this.classList.add("editor-atomic-item"),this.$checkListItemContainer=this.select(".check-list-item-container"),this.$checkbox=this.select("input"),this.$liveTextInput=new o(this.textValueState,!0),this.$checkListItemContainer.appendChild(this.$liveTextInput),this.isCheckedState.value&&(this.$checkbox.checked=this.isCheckedState.value,this.onToggleChecked())}}export{g as default};
