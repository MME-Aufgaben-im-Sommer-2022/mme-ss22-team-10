var c=Object.defineProperty;var h=(o,e,t)=>e in o?c(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var a=(o,e,t)=>(h(o,typeof e!="symbol"?e+"":e,t),t);import{W as p,G as n,a as s,D as d,p as m}from"./index.2bb824ab.js";import g from"./EditorBlock.779fac8b.js";import{E as l}from"./EventBus.244da95f.js";import{C as E}from"./CloseAllEditorInputs.40019b73.js";import f from"./CalendarDay.96474b4d.js";import"./FreeTextInputField.9cfea905.js";import"./BulletPointInputField.e9406df7.js";import"./LiveBulletPointItem.6c24a58a.js";import"./LiveTextInput.5b8a2bf4.js";import"./CheckListInputField.aebd85c7.js";import"./LiveCheckListItem.6334a40b.js";const u=`<div class="editor border">
  <ul class="editor-blocks-container container">
    <li class="spacer no-list-style"></li>
  </ul>
</div>`,S=`note-editor{width:65%;flex-grow:1}.editor{width:100%;flex-grow:1;display:flex;justify-content:center;padding-top:var(--spacing-medium);padding-left:var(--spacing-editor-side);overflow-y:scroll}.editor-blocks-container{display:flex}.editor-blocks-container>*{margin-right:auto}check-list-item{margin-left:0;padding-left:0;list-style:none!important}.editor input{margin-top:var(--spacing-small);width:15em}
`;class x extends p{constructor(){super(u,S);a(this,"editorModelState");a(this,"$editor");a(this,"$editorBlocksContainer")}get htmlTagName(){return"note-editor"}onCreate(){return this.$toggleLoading(!0),this.initData().then(()=>{this.$initHtml(),this.initListeners()})}async initData(){if(!n.hasState(s.editorModel)){const t=await d.getEditorModel(new Date);if(t)n.addState(t.toState(),s.editorModel);else throw new Error("Could not load editor model")}this.editorModelState=n.getStateById(s.editorModel)}$initHtml(){this.$editor=this.select(".editor"),this.$editorBlocksContainer=this.select(".editor-blocks-container"),this.$appendEditorBlocks()}$toggleLoading(t){}$appendEditorBlocks(){this.editorModelState.value.blockContents.forEach((t,r)=>{const i=this.editorModelState.createSubState(`value.blockContents.${r}`);this.$editorBlocksContainer.insertBefore(new g(i),this.select(".spacer"))}),this.$toggleLoading(!1)}initListeners(){this.$editor.addEventListener("click",()=>{l.notifyAll(E,{})}),this.editorModelState.addEventListener("change",t=>{t.data.currentPath===""?(this.$editorBlocksContainer.querySelectorAll("editor-block").forEach(i=>{i.remove()}),this.$appendEditorBlocks()):d.updateEditorModel(this.editorModelState.value)}),l.addEventListener(f.CALENDAR_DAY_CLICKED_EVENT,t=>{const r=t.data;this.$toggleLoading(!0),d.getEditorModel(m(r)).then(i=>{this.editorModelState.value=i})})}}export{x as default};
