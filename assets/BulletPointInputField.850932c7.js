var a=Object.defineProperty;var r=(i,n,t)=>n in i?a(i,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[n]=t;var e=(i,n,t)=>(r(i,typeof n!="symbol"?n+"":n,t),t);import{W as h,S as s}from"./index.642516bc.js";import p from"./LiveBulletPointItem.98ed9c8c.js";import"./LiveTextInput.778fc168.js";import"./EventBus.dbf2ca07.js";import"./CloseAllEditorInputs.40019b73.js";const P=`<ul class="bullet-point-container">
  <!--LiveBulletPoints will be appended here-->
</ul>
<input type="text" class="new-bullet-point-input text-input new-item-input editor-atomic-item" placeholder="Add a bullet point">
`;class S extends h{constructor(t){super(P);e(this,"$bulletPointContainer");e(this,"$newBulletPointInputContainer");e(this,"$newBulletPointInput");e(this,"bulletPointsListState");e(this,"bulletPointsState");e(this,"$appendBulletPoints",()=>{this.bulletPointsState.value.forEach((t,l)=>{this.$bulletPointContainer.insertBefore(this.$createBulletPoint(l),this.$newBulletPointInputContainer)})});e(this,"$createBulletPoint",t=>{const l=new s(this.bulletPointsState.value[t]),o=new p(l);return l.addEventListener("change",u=>{u.data.newValue===""&&o.remove(),this.bulletPointsState.value[t]=u.data.newValue}),o});e(this,"onBulletPointsStateChanged",()=>{this.bulletPointsListState.value=this.bulletPointsState.value.filter(t=>t.trim()!=="").join(`
`)});e(this,"$addNewBulletPointItem",()=>{const t=this.$newBulletPointInput.value.trim();t.length>0&&(this.bulletPointsState.value.push(t),this.$bulletPointContainer.insertBefore(this.$createBulletPoint(this.bulletPointsState.value.length-1),this.$newBulletPointInputContainer),this.$newBulletPointInput.value="")});this.bulletPointsListState=t,this.bulletPointsState=new s([]),this.bulletPointsListState.value.split(`
`).forEach(l=>{const o=l.trim();o!==""&&this.bulletPointsState.value.push(o)})}get htmlTagName(){return"bullet-point-input-field"}onCreate(){this.$initHtml(),this.initListeners()}$initHtml(){this.$bulletPointContainer=this.select(".bullet-point-container"),this.$newBulletPointInputContainer=this.select(".new-bullet-point-input-container"),this.$newBulletPointInput=this.select(".new-bullet-point-input"),this.$appendBulletPoints()}initListeners(){this.$newBulletPointInput.addEventListener("keydown",t=>{t.key==="Enter"&&this.$addNewBulletPointItem()}),this.bulletPointsState.addEventListener("change",this.onBulletPointsStateChanged)}}export{S as default};
