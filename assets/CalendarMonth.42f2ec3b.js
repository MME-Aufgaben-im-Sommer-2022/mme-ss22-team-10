var o=Object.defineProperty;var h=(n,e,t)=>e in n?o(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var r=(n,e,t)=>(h(n,typeof e!="symbol"?e+"":e,t),t);import{W as c,C as a}from"./index.061e6eb4.js";const u='<div class="calendar-month">\r    <div class="entry-container" ></div>\r</div>',l=`calendar-month{display:flex;flex-grow:1}.entry-container{display:grid;grid-column-gap:var(--spacing-medium);grid-row-gap:var(--spacing-medium);grid-template-columns:repeat(auto-fit,minmax(130px,130px))}
`;class m extends c{constructor(t,i,s){super(u,l);r(this,"entriesForCurrentMonth");r(this,"currentWeekDay");r(this,"currentMonthNumberText");r(this,"currentYear");r(this,"currentDate");r(this,"$entryContainer");this.entriesForCurrentMonth=t,this.currentMonthNumberText=i.toString(),this.currentYear=s}get htmlTagName(){return"calendar-month"}onCreate(){this.$initHtml(),this.appendCalenderEntry()}$initHtml(){this.$entryContainer=this.select(".entry-container")}getWeekDay(t){this.currentDate=new Date(parseInt(this.currentYear),parseInt(this.currentMonthNumberText)-1,parseInt(t)),this.currentWeekDay=this.currentDate.toLocaleDateString("default",{weekday:"short"})}appendCalenderEntry(){for(let t=0;t<this.entriesForCurrentMonth.length;t++)this.getWeekDay(this.entriesForCurrentMonth[t]),parseInt(this.entriesForCurrentMonth[t])<10?this.$entryContainer.append(new a("0"+this.entriesForCurrentMonth[t]+", "+this.currentWeekDay,this.currentDate)):this.$entryContainer.append(new a(this.entriesForCurrentMonth[t]+", "+this.currentWeekDay,this.currentDate))}}export{m as default};
